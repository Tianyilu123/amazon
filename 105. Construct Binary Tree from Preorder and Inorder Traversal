class Solution {
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        if(preorder == null || inorder == null) return null;
        return helper(preorder, inorder, 0, 0, inorder.length-1);
    }
    
    private TreeNode helper(int[] preorder, int[] inorder, int preStart, 
                                                        int inStart, int inEnd) {
        if(inStart > inEnd || preStart == preorder.length) return null;
        int inIdx = 0;
        for(int i=0; i<inorder.length; i++) {
            if(inorder[i] == preorder[preStart]) {
                inIdx = i;
                break;
            }
        }
        TreeNode parent = new TreeNode(preorder[preStart]);
        parent.left = helper(preorder, inorder, preStart+1, inStart, inIdx-1);
        parent.right = helper(preorder, inorder, preStart+inIdx-inStart+1, inIdx+1, inEnd);
        return parent;
    }
}
