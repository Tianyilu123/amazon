class Solution {
    int[][] dirs = new int[][]{{-1,0},{1,0},{0,1},{0,-1}};
    
    public int getMaximumGold(int[][] grid) {
        int rows = grid.length, cols = grid[0].length;
        int res = 0;
        
        for(int i=0; i<rows; i++) {
            for(int j=0; j<cols; j++) {
                res = Math.max(res, dfs(grid, i, j));
            }
        }
        
        return res;
    }
    
    private int dfs(int[][] grid, int i, int j) {
        if(i<0 || i>=grid.length || j<0 || j>=grid[0].length || grid[i][j] == 0) return 0;
        int orig = grid[i][j];
        grid[i][j] = 0;
        int max = 0;
        
        for(int[] dir : dirs) {
            int ii = i + dir[0];
            int jj = j + dir[1];
            max = Math.max(max, dfs(grid, ii, jj));
        }
        
        grid[i][j] = orig;
        return max + orig;
    }
}
